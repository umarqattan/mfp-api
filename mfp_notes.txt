1. Start out implementing each premium feature of MyFitnessPal

2. Premium Features include:
	[x] Export each set of measurement data into csv format within a date range
		[X] Weight get_measurements('Weight', day) or get_measurements('Weight', thisWeek, lastWeek)
		[X] Body Fat
	[X] Export nutrition data into csv format
		[X] 
		[X] day = get_date() -> meals -> meals[i] -> meal -> meal.entries -> entry = meal.entries[i] -> entry.name
		[X] day.totals
		[X] Be able to track a day -> meals -> entries -> nutrients per entry
5/31/17	Meals	Food Entry	Calories	Fat (g)	Carbohydrates (g)	Net Carbohydrates (g) Protein (g)	Fiber (g)	Sodium (mg)
Suppplements	Totals	18	2	0	0	0	0	0
		Men's Health Formula Multivitamin	0	0	0	0	0	0	0
		Vitamin D3	0	0	0	0	0	0	0
		Fish Oil	18	2	0	0	0	0	0
		Glucosamine +	0	0	0	0	0	0	0
		Creatine Monohydrate	0	0	0	0	0	0	0
Meal 1	Totals	75	2	15	15	2	0	233
		Crackers	65	2	11	11	2	0	153
		Sugar Free Maple Syrup	10	0	4	4	0	0	80
Meal 2	Totals	876	34	70	48	79	22	1461
		Egg	140	10	0	0	12	0	140
		100% Unsweetened Cocoa powder	40	3	6	2	2	4	0
		Stevia in the Raw	0	0	0	0	0	0	0
		flax seed	180	16	2	2	8	12	0
		Bananas - Raw	116	0	30	27	1	3	1
		Chunky Light Tuna in Water - Tad	240	2	0	0	52	0	1120
		Banana & Maple Instant Oatmeal	160	2	32	29	4	3	200
Snacks	Totals	200	4	24	8	21	16	190
		Lift Protein Bar	200	4	24	8	21	16	190




	[ ] Find the max protein/carbohydrate/fat/sodium/potassium/fiber sources from foods tracked

		food_entries:[String:Any] = {food_item_name: {calories: int, protein:int, carbohydrate:int, fat:int, fiber:int, sodium:int}

		if food_entries.get(food_item_name,0) == 0:
			food_entries[food_item_name] = food_item.totals

		** issue is that foods are not tracked in units, but rather how many servings the user consumes in a particular meal. For example, if a user tracks 12 oz of chicken, need to normalize the serving size to 4 oz. 
		** A work around would be to calculate a ratio. protein/(1 if carb <= 0 else carb) >> protein/(1 if fat <= 0 else fat) 
		** if 


	[ ] Export exercise information into csv format (need to add functionality to API)




